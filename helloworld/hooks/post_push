#!/bin/bash
set -e

# Parse image name for repo name
#tagStart=$(expr index "$IMAGE_NAME" :)
#REPO_NAME=${IMAGE_NAME:0:tagStart-1} => $DOCKER_REPO

# Read image metadata from labels
VERSION=`docker inspect -f "{{ index .Config.Labels \"org.label-schema.schema-version\" }}" "${IMAGE_NAME}"`

# Parse IMAGE_NAME, as CACHE_TAG is broken on Docker Hub post_push
IFS=: read CURRENT_REPO CURRENT_TAG <<< $IMAGE_NAME

echo "---------- DEBUG -----------"
echo "Docker Hub environment variables:"
echo "IMAGE_NAME: $IMAGE_NAME"
echo "DOCKER_REPO: $DOCKER_REPO"
echo "DOCKER_TAG: $DOCKER_TAG"
echo "CACHE_TAG: $CACHE_TAG"
echo "Custom variables:"
echo "CURRENT_REPO: $CURRENT_REPO"
echo "CURRENT_TAG: $CURRENT_TAG"
echo "VERSION: $VERSION"
echo "----------------------------"

ARCH=${CURRENT_TAG}
# Tag and push image for each additional tag
for TAG in {"${ARCH}-latest","${ARCH}-${VERSION}"}; do
  echo "Tag: ${DOCKER_REPO}:${TAG}"
  docker tag "$IMAGE_NAME" "${DOCKER_REPO}:${TAG}"
  docker push "${DOCKER_REPO}:${TAG}"
done

# Create manifest list
# DISABLED: DockerHub docker cli does not have "experimental" enabled
# TODO: only after building all the tags (?)
# Build a multi-arch manifest
docker manifest create --amend ${IMAGE_NAME}:${VERSION} \
  ${IMAGE_NAME}:amd64-${VERSION} ${IMAGE_NAME}:arm32v7-${VERSION}
docker manifest create --amend ${IMAGE_NAME}:latest \
  ${IMAGE_NAME}:amd64-${VERSION} ${IMAGE_NAME}:arm32v7-${VERSION}

docker manifest annotate ${IMAGE_NAME}:${VERSION} \
  ${IMAGE_NAME}:amd64-${VERSION} --os linux --arch amd64
docker manifest annotate ${IMAGE_NAME}:${VERSION} \
  ${IMAGE_NAME}:arm32v7-${VERSION} --os linux --arch arm --variant 7

docker manifest push ${IMAGE_NAME}:${VERSION}
docker manifest push --purge ${IMAGE_NAME}:latest